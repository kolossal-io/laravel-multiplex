name: Run Tests

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.3, 8.4]
        laravel: ["11.*", "12.*"]
        testbench: ["10.*"]
        morphtype: [integer, uuid, ulid]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 9.*
            php: 8.0
            testbench: 7.*
            stability: prefer-stable
          - laravel: 10.*
            php: 8.3
            testbench: 8.*
          - laravel: 11.*
            php: 8.3
            testbench: 9.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.morphtype }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "directory=$(composer config cache-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show

      - name: Determine if Code Coverage is needed
        id: coverage
        run: echo "ENABLED={ matrix.php == '8.3' && matrix.stability == 'prefer-stable' && matrix.laravel == '10.*' }" >> "$GITHUB_OUTPUT"

      - name: Output if Code Coverage is needed
        run: echo "${{ steps.coverage.ENABLED }}"

      - name: Execute tests
        run: vendor/bin/pest
        env:
          MULTIPLEX_MORPH_TYPE: ${{ matrix.morphtype }}
